---
title: A 5-year review of my retirement portfolio
subtitle: "#2"
author: corey
date: 2025-08-17
categories:
  - economics
  - work
editor_options: 
  markdown: 
    wrap: sentence
execute:
  warning: false
  cache: true
from: markdown+emoji
draft: true
---

As I mentioned in [my last post](../2025-07-20-holdings-performance/index.qmd), I'd like to incorporate the expenses of each ETF and simulate the absolute returns given sample investments:
My goal here is to compare the portfolio performance against investing the same amounts in `$VTI`.

::: {.callout-note}
# Pricing in expenses

Expense ratios are priced into the net asset value of the fund daily.
For example, if one of my positions was \$1,000 dollars and the expense ratio was 1%, the position I'd see would be \$990.
If the expense ratio were 0.01%, the position would be worth \$999.

Since they're part of the share price, I don't need to account for them myself.
:::


# Tidy portfolios

I'm tracking my portfolio in dataframes for familiarity, starting with the same table I used in my last post.

```{r}
library(tidyverse)
library(tidyquant)

brokerage <- c("ESGE", "ESGU", "VTI") |>
  tq_get(from = "2020-05-01") |>
  mutate(account = "brokerage")

ira <- c("VLXVX", "VTI") |>
  tq_get(from = "2023-06-01") |>
  mutate(account = "ira")
```

To separate our baseline from the rest, I'll add a column for `$VTI`.

```{r}
prices <- bind_rows(ira, brokerage) |>
  mutate(scenario = if_else(symbol == "VTI", "baseline", "actual"))
```

What all is in this table?

```{r}
glimpse(prices)
```

From this dataframe, we only need `symbol`, `date`, `adjusted`, `account`, and `scenario` so we can drop the rest.

```{r}
selected_prices <- select(prices, symbol, date, adjusted, account, scenario)
```

To this dataframe, we need to add the number of shares in each account that I would have purchased at the time I started investing.
Calculating shares is a sraightforward division of the allocated amount on the day I purchased by the share price.
I'll pretend I invested \$1,000 in my taxable brokerage account in May 2020 and \$10,000 in my Roth IRA in June 2022, when I moved to Cambridge.
This is more realistic than it might sound at first because I haven't contributed much since I purchased my initial positions.
As I mentioned in my last post, I split my contribution in the brokerage account 60%--40% between US and international stocks.

```{r}
positions <- selected_prices |>
  group_by(symbol, account) |>
  mutate(initial_share_price = first(adjusted)) |>
  ungroup() |>
  mutate(
    weights = case_match(
      symbol,
      "VTI" ~ 1, # 100% of each baseline comparator is VTI
      "ESGU" ~ .6,
      "ESGE" ~ .4,
      "VLXVX" ~ 1
    ),
    initial_investment = if_else(account == "brokerage", 1000, 10000),
    shares = initial_investment * weights / initial_share_price
  )
```

For a point-in-time snapshot of each portfolio, I'll use `treemapify` to make treemaps using `ggplot2` 

```{r}
positions |>
  group_by(symbol, account, scenario) |>
  summarize(value = first(initial_investment * weights)) |>
  ggplot() +
  aes(area = value, fill = symbol, label = scales::dollar(value)) +
  treemapify::geom_treemap() +
  treemapify::geom_treemap_text(place = "center") +
  facet_grid(rows = vars(account), cols = vars(scenario), scales = "free") +
  labs(title = "Initial investment position per portfolio")
```

Now, how do these change over time?

# Performance over time

The first, easy way to compare performance is to show how the value of my positions changes over time by multiplying the share price by the number of shares (which remains fixed in this example).

```{r}
positions |>
  group_by(symbol, account, scenario) |>
  ungroup() |>
  mutate(value = shares * adjusted) |>
  ggplot() +
  aes(x = date, y = value, fill = account) +
  geom_area(position = "stack") +
  facet_grid(cols = vars(scenario)) +
  scale_y_continuous(labels = scales::dollar) +
  theme(legend.position = "bottom")
```

It looks like I really missed out on returns from my brokerage account.


