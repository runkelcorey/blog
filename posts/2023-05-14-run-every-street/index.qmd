---
title: "2023 goal: run every street in Cambridge"
author: corey
date: 2023-05-14
categories:
  - running
  - projects
  - r
editor_options: 
  markdown: 
    wrap: sentence
execute: 
  eval: false
draft: true
---

Since I stopped running competitively in high school, I use running to explore.
Surprisingly, much of what I explore are places I've lived for a while.
When I trained for the 2019 Richmond Marathon, I explored Charlottesville, where I had lived for 3 years.
In covid, I explored Northern Virginia, where I grew up, and the Outer Banks, where my family has for many years spent a week in the summer.

New Haven was the first time I had used running to explore somewhere new.
It's a small city, so it was feasible to run to the edges and back without going more than 6 or 7 miles.
Nevertheless, running showed me some parts that I never would have seen otherwise: the waterfront, with all its industry and emptiness; Westville, with an underused but large park; and the mansions of St. Ronan Street.

When I moved to Camcbridge, the size of the streetscape overwhelmed me.
I could run 25 miles without leaving a sidewalk, and there was far too much to see by myself.
Counterintuitively, I needed to limit my scope in order to see new things.
So, in January 2023, I set myself a goal to run each street in Cambridge.
But, 5 months later, I know haven't done much.

Partly, my lack of progress is due to not knowing what I have and haven't done.
(Partly, it's laziness.)
This is also a great opportunity to pull together several data skills.
In this post, I will set up a tool to track my progress.
The tool will:
* display a map of run and un-run streets
* calculate % and miles of streets run
* show how much running I could divert to this goal
* automatically update each day

Therefore, I need spatial data for each run, plus spatial data to identify streets in Cambridge.
For each run's path, I'll get my Strava data using `rStrava`.
For the streets, I'll use `osmdata`.
Then, I'll visualize these using `rShiny` and update them using GitHub Actions.

## Get My Data

```{r}
library(tidyverse)
library(sf)
library(rStrava)
library(osmextract)
library(googlePolylines)
library(tigris)
library(ggmap)
```

```{r}
app_name = "run-every-street"
app_client_id = "107397"
app_secret = "41c03174e207781ba2664ab81afb9c1f9303120f"

stoken <- httr::config(token = strava_oauth(app_name, app_client_id, app_secret, app_scope="activity:read_all"))
```

```{r}
activities <- get_activity_list(stoken) %>%
compile_activities() %>%
filter(str_ends(sport_type, "Run"), str_ends(timezone, "New_York"))
```

```{r}
activities <- activities %>%
.$map.summary_polyline %>%
decode() %>% map(function(x) st_linestring(cbind(x$lon, x$lat))) %>% st_sfc() %>% cbind(activities) %>%
select(id, start_date_local, distance, elapsed_time, geometry) %>%
st_as_sf() %>%
st_set_crs(3857)
```

```{r}
bb <- st_bbox(cambridge)
names(bb) <- c('left', 'bottom', 'right', 'top')

bb %>%
get_map(maptype = 'toner-lite', source = 'stamen') %>%
ggmap() +
geom_sf(aes(col = 'red'), data = st_set_crs(activities, 3857), inherit.aes = FALSE)
```

## Get Street Data

```{r}
streets <- oe_get('us/massachusetts') %>%
filter(!is.na(highway)) %>%
select(osm_id, name, highway, other_tags, geometry)
```

```{r}
cambridge <- places(state = 'MA', year = 2022) %>%
filter(NAME == 'Cambridge') %>%
select(NAME, geometry)
```

```{r}
streets <- st_read("posts/2023-05-14-run-every-street/cambridge_streets.gpkg") %>%
st_transform(st_crs(cambridge)) %>%
st_intersection(cambridge)
```
## Calculate

```{r}
st_buffer(st_transform(activities, st_crs(cambridge)), .0001) %>%
ggplot() +
geom_sf()
```

## Visualize

## Automate
